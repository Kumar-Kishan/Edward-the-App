{"version":3,"sources":["webpack:///./src/app/workshops/resources/plot-prompts.js","webpack:///./src/app/workshops/plotWorkshop.vue","webpack:///src/app/workshops/plotWorkshop.vue","webpack:///./src/app/workshops/plotWorkshop.vue?33b4"],"names":["_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","__vue_styles__","context","Component","Object","_babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_plotWorkshop_vue__WEBPACK_IMPORTED_MODULE_0___default","a","_node_modules_vue_loader_lib_template_compiler_index_id_data_v_18c0bf1c_hasScoped_false_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_plotWorkshop_vue__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","_workshops","_deltaParser","exerciseCache","_cache2","default","promptCache","QuillEditor","_quillEditor2","workshops","content","currentWorkshop","currentPrompt","newWorkshop","cacheDelete","workshop","checkForDeletion","cacheGet","cachedGuid","length","getRandomPrompt","prompt","_guid2","toLocaleDateString","name","guid","_ref","getCurrentWorkshop","getCurrentPrompts","prompts","d","staticRenderFns","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","begun","_e","on","click","$event","begin","finished","_m","_s","ref","attrs","update:content","updateContent","finish","fullText","trim","reset"],"mappings":"yJAAe,myICAfA,EAAAC,EAAA,QASA,IAEAC,EAXA,SAAAC,GACAF,EAAA,SAgBAG,EAAAC,OAAAL,EAAA,EAAAK,CACAC,EAAAC,EACAC,EAAA,EACAA,EAAA,GAXA,EAaAN,EATA,KAEA,MAYAO,EAAA,QAAAL,EAAA,4FCaA,IAAAM,EAAAT,EAAA,YACAA,EAAA,SACAU,EAAAV,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,4DAEA,IAAAW,EAAA,IAAAC,EAAAC,QAAA,kCACAC,EAAA,IAAAF,EAAAC,QAEA,gDAIAE,YAAAC,EAAAH,6EAGAI,yEAGA,4DAGAC,yCAKA,YACA,SACA,YAEA,gDAKA,mBAKAC,kBAEAC,SALAC,oEAWAC,gBACAA,4HAEAC,iCAKAD,gBACAA,6BACA,OACAE,yDAGAC,qBAEA,4CAMAA,wEAKAC,KAHA,kGAOA,2EAIAC,mCAGAL,+BACAM,kCAEAC,UACAP,uCAEA,QACA,EAAAQ,EAAAjB,6CACAkB,2BACA,uCACAC,aACA,wCAEA,2DACAT,oCACAU,0EAGA,kCAGA,iBACA,gBACA,gCAEA,IAAAf,EAAAgB,EAAAhB,uFAGAK,oBAGAL,sCAIAiB,0BACA,YACAC,iCACAC,mCAIAb,0FC3KAxB,EAAAsC,EAAA9B,EAAA,sBAAA+B,IAAA,IAAAC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,kBAA4BF,EAAA,OAAYE,YAAA,aAAuBF,EAAA,MAAAJ,EAAAO,GAAA,+BAAAP,EAAAO,GAAA,KAAAH,EAAA,KAAAJ,EAAAO,GAAA,0HAAAP,EAAAO,GAAA,KAAAP,EAAAQ,MAAwTR,EAAAS,KAAxTL,EAAA,UAA4OE,YAAA,qBAAAI,IAAqCC,MAAA,SAAAC,GAAyBZ,EAAAa,YAAcb,EAAAO,GAAA,WAAAP,EAAAO,GAAA,KAAAP,EAAAQ,QAAAR,EAAAc,SAAAV,EAAA,OAAAA,EAAA,OAA0FE,YAAA,WAAqBN,EAAAe,GAAA,GAAAf,EAAAO,GAAA,KAAAH,EAAA,KAAAJ,EAAAO,GAAA,eAAAP,EAAAgB,GAAAhB,EAAAZ,QAAA,kBAAAY,EAAAO,GAAA,KAAAH,EAAA,OAAiHE,YAAA,UAAoBF,EAAA,gBAAqBa,IAAA,cAAAC,OAAyBzC,QAAAuB,EAAAvB,SAAsBiC,IAAKS,iBAAA,SAAAP,GAAkCZ,EAAAoB,cAAAR,QAA4B,GAAAZ,EAAAO,GAAA,KAAAH,EAAA,OAA4BE,YAAA,YAAsBF,EAAA,UAAeE,YAAA,oBAAAI,IAAoCC,MAAA,SAAAC,GAAyBZ,EAAAqB,aAAerB,EAAAO,GAAA,cAAAP,EAAA,SAAAI,EAAA,OAAAA,EAAA,KAAwDE,YAAA,aAAuBL,KAAAqB,SAAAC,QAAAnB,EAAA,UAAAJ,EAAAO,GAAA,YAAAP,EAAAO,GAAA,sFAAAH,EAAA,UAAAJ,EAAAO,GAAA,cAAAP,EAAAO,GAAA,4CAAAP,EAAAO,GAAA,KAAAH,EAAA,UAAqQE,YAAA,eAAAI,IAA+BC,MAAA,SAAAC,GAAyBZ,EAAAwB,YAAcxB,EAAAO,GAAA,kBAAAP,EAAAS,UACn4CX,GAAA,WAAoC,IAAaI,EAAbD,KAAaE,eAA0BC,EAAvCH,KAAuCI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,KAAAA,EAAA,UAA/DH,KAA+DM,GAAA","file":"static/js/3.441d257eba930803b253.js","sourcesContent":["export default [\r\n  `Intrigue is when one character keeps a dangerous or malevolent secret from another. Write a scene that creates intrigue.`,\r\n  `Write a scene that raises the stakes by putting something a character cares about at risk.`,\r\n  `Write a scene where the reader finds out something important that one of the characters doesn't yet know.`,\r\n  `Suspense is when the reader wonders anxiously what will happen next. Write a scene where the outcome of a decision, a natural event, or an interaction is urgent and uncertain.`,\r\n  `Plots often weave together moments of action and moments of reflection. Determine whether your last scene involved more action or more reflection, then write a scene that does the opposite.`,\r\n  `A character's first attempt to solve a problem is rarely successful. Write a scene where someone tries and fails to solve a problem.`,\r\n  `Perverseness is when a character willfully makes the wrong choice or makes things worse for themself. Write a scene where a character does something perverse.`,\r\n  `Write a scene that sets up the reader to expect a certain outcome, but then the opposite happens.`,\r\n  `Write a scene where something happens much sooner than expected.`,\r\n  `Characters' relationships with each other often change over the course of a novel. Write a scene where one character misjudges another (too harshly or too generously).`,\r\n  `Write a scene where a character acts on a false assumption.`,\r\n  `Write a scene where two characters disagree, but neither of them is necessarily wrong.`,\r\n  `Write a scene where a character speculates about what another character is doing.`,\r\n  `Write a scene where a character speculates about another character's motives.`,\r\n  `Write a scene where a character makes an incorrect prediction.`,\r\n  `An epiphany is when a character has a sudden, sweeping realization about themself or their situation. Write a scene where someone has an epiphany.`,\r\n  `Write a scene that is influenced by events the reader doesn't know about yet. That is, something important has happened offstage, and all the reader can see are the consequences.`,\r\n  `Write a scene where something makes a character very uncomfortable.`,\r\n  `Write a scene where a character loses their temper.`,\r\n  `Write a scene where a character's hidden motives are revealed.`,\r\n  `Write a scene where a character shows up unexpectedly.`,\r\n  `Characters are more lifelike when they're a little unpredictable. Write a scene where a character does something that surprises another character or even themself.`,\r\n  `Write a scene where one character gives another some bad advice.`,\r\n  `Write a scene where two or more characters have a conversation and one of them completely misunderstands it.`,\r\n  `Write a scene where a character's loyalties are tested.`,\r\n  `Write a scene where one character tries to convince another to change sides in a conflict.`,\r\n  `Write a scene where a character accidentally discovers something about another character that could change their relationship.`,\r\n  `Write a scene where a character faces the consequences of a decision they thought was far behind them.`,\r\n  `Write a scene where one character's trust in another is broken.`,\r\n  `Write a scene where a character gets lost and ends up somewhere interesting.`,\r\n  `Write a scene where something potentially helpful comes from an untrustworthy source.`,\r\n  `Write a scene where one character eavesdrops on another's conversation.`,\r\n  `Write a scene where one character apologizes to another.`,\r\n  `Write a scene where a character gives up, but something happens to motivate them to keep trying.`,\r\n  `Write a scene where a character makes a big mistake and assumes all is lost.`,\r\n  `Write a scene where one character interrogates another.`,\r\n  `Write a scene where a character is forced to defend a lie they told earlier.`,\r\n  `Write a scene where one character falsely accuses another of a crime or misdeed.`,\r\n  `Write a scene where a character's reputation has preceded them.`,\r\n  `Write a scene where a character is forced to choose between two things they care deeply about.`,\r\n  `Write a scene where a character is asked to trust a complete stranger.`,\r\n  `Write a scene where a character is forced to invent a story to explain their presence somewhere.`,\r\n  `Write a scene where two characters at odds with each other are forced to work together.`\r\n]\r\n","function injectStyle (context) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"scoped\\\":false,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./plotWorkshop.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./plotWorkshop.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./plotWorkshop.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-18c0bf1c\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./plotWorkshop.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","<template>\r\n  <div class=\"workshop-wrap\">\r\n    <div class=\"workshop\">\r\n      <h1>Plot & Character Workshop</h1>\r\n      <p>\r\n        A prompt will appear below. Follow the prompt to help you build your plot and develop your characters.\r\n      </p>\r\n      <button v-if=\"!begun\" class=\"begin button-green\" @click=\"begin()\">Begin</button>\r\n      <div v-if=\"begun && !finished\">\r\n        <div class=\"prompt\">\r\n          <p>\r\n            <strong>Prompt:</strong>\r\n          </p>\r\n          <p>\r\n            {{ prompt }}\r\n          </p>\r\n        </div>\r\n        <div class=\"write\">\r\n          <quill-editor :content=\"content\" @update:content=\"updateContent($event)\" ref=\"quillEditor\"></quill-editor>\r\n        </div>\r\n        <div class=\"actions\">\r\n          <button class=\"done button-green\" @click=\"finish()\">Done</button>\r\n        </div>\r\n      </div>\r\n      <div v-else-if=\"finished\">\r\n        <p class=\"finished\">\r\n          <template v-if=\"this.fullText.trim()\">\r\n            <strong>Saved!</strong> You can view this exercise in the Workshops column of the Write page.\r\n          </template>\r\n          <template v-else>\r\n            <strong>Deleted!</strong> This exercise was empty.\r\n          </template>\r\n        </p>\r\n        <button class=\"button-green\" @click=\"reset()\">Start over</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ADD_WORKSHOP, DELETE_WORKSHOP, UPDATE_WORKSHOPS_CONTENT } from '../shared/workshops.store'\r\nimport Cache from '../shared/cache'\r\nimport { GetContentString } from '../shared/deltaParser'\r\nimport guid from '../shared/guid'\r\nimport PlotPrompts from './resources/plot-prompts'\r\nimport QuillEditor from '../shared/quillEditor.vue'\r\nimport writingWorkshops from '../../../models/writingWorkshop'\r\n\r\nconst exerciseCache = new Cache('PLOT_WORKSHOP_CURRENT_EXERCISE')\r\nconst promptCache = new Cache('PLOT_WORKSHOP_PROMPTS')\r\n\r\nexport default {\r\n  components: {\r\n    QuillEditor\r\n  },\r\n  computed: {\r\n    allWorkshops () {\r\n      return this.$store.state.workshop.workshops\r\n    },\r\n    content () {\r\n      return this.workshop ? this.workshop.content : null\r\n    },\r\n    fullText () {\r\n      return GetContentString(this.content)\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      begun: false,\r\n      finished: false,\r\n      prompt: '',\r\n      workshop: null\r\n    }\r\n  },\r\n  methods: {\r\n    begin (currentWorkshop, currentPrompt) {\r\n      this.begun = true\r\n\r\n      if (!currentWorkshop) {\r\n        this.newWorkshop()\r\n      } else {\r\n        this.workshop = currentWorkshop\r\n\r\n        if (currentPrompt) {\r\n          this.prompt = currentPrompt\r\n        }\r\n      }\r\n    },\r\n    checkForDeletion () {\r\n      if (!this.fullText.trim()) {\r\n        exerciseCache.cacheDelete()\r\n        promptCache.cacheDelete()\r\n        if (this.workshop && this.allWorkshops.includes(this.workshop)) {\r\n          this.$store.commit(DELETE_WORKSHOP, { workshop: this.workshop })\r\n        }\r\n      }\r\n    },\r\n    finish () {\r\n      exerciseCache.cacheDelete()\r\n      promptCache.cacheDelete()\r\n      this.finished = true\r\n      this.checkForDeletion()\r\n    },\r\n    getCurrentPrompts () {\r\n      const cachedPrompts = promptCache.cacheGet()\r\n      if (!cachedPrompts) {\r\n        return null\r\n      }\r\n\r\n      return cachedPrompts\r\n    },\r\n    getCurrentWorkshop () {\r\n      const cachedGuid = exerciseCache.cacheGet()\r\n      if (!cachedGuid) {\r\n        return null\r\n      }\r\n\r\n      const workshop = this.allWorkshops.find(workshop => workshop.guid === cachedGuid)\r\n      return workshop || null\r\n    },\r\n    getDefineLink (word) {\r\n      const urlWord = word.trim().replace(/\\s+/g, '+')\r\n      return `https://www.google.com/#q=define+${urlWord}`\r\n    },\r\n    getRandomPrompt () {\r\n      return PlotPrompts[this.randomInt(PlotPrompts.length)]\r\n    },\r\n    newWorkshop () {\r\n      promptCache.cacheDelete()\r\n      this.prompt = this.getRandomPrompt()\r\n      promptCache.cacheSet(this.prompt)\r\n\r\n      exerciseCache.cacheDelete()\r\n      this.workshop = {\r\n        archived: false,\r\n        guid: guid(),\r\n        title: `Plot Workshop ${new Date().toLocaleDateString()}`,\r\n        order: 0,\r\n        workshopName: writingWorkshops.PLOT_WORKSHOP.name,\r\n        content: null,\r\n        date: new Date().toLocaleDateString('en-US')\r\n      }\r\n      this.$store.commit(ADD_WORKSHOP, { workshop: this.workshop })\r\n      exerciseCache.cacheSet(this.workshop.guid)\r\n    },\r\n    randomInt (max) {\r\n      return Math.floor(Math.random() * Math.floor(max + 1))\r\n    },\r\n    reset () {\r\n      this.begun = false\r\n      this.finished = false\r\n      this.workshop = null\r\n    },\r\n    updateContent ({ content }) {\r\n      this.$store.commit(UPDATE_WORKSHOPS_CONTENT, {\r\n        workshopUpdates: [{\r\n          workshop: this.workshop,\r\n          newContent: content\r\n        }]\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    const workshop = this.getCurrentWorkshop()\r\n    if (workshop) {\r\n      const prompts = this.getCurrentPrompts()\r\n      this.begin(workshop, prompts)\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    this.checkForDeletion()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.prompt {\r\n  margin-top: 20px;\r\n}\r\n\r\n.warn {\r\n  color: red;\r\n}\r\n\r\n.write {\r\n  height: 300px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.actions {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"workshop-wrap\"},[_c('div',{staticClass:\"workshop\"},[_c('h1',[_vm._v(\"Plot & Character Workshop\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n      A prompt will appear below. Follow the prompt to help you build your plot and develop your characters.\\n    \")]),_vm._v(\" \"),(!_vm.begun)?_c('button',{staticClass:\"begin button-green\",on:{\"click\":function($event){_vm.begin()}}},[_vm._v(\"Begin\")]):_vm._e(),_vm._v(\" \"),(_vm.begun && !_vm.finished)?_c('div',[_c('div',{staticClass:\"prompt\"},[_vm._m(0),_vm._v(\" \"),_c('p',[_vm._v(\"\\n          \"+_vm._s(_vm.prompt)+\"\\n        \")])]),_vm._v(\" \"),_c('div',{staticClass:\"write\"},[_c('quill-editor',{ref:\"quillEditor\",attrs:{\"content\":_vm.content},on:{\"update:content\":function($event){_vm.updateContent($event)}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"actions\"},[_c('button',{staticClass:\"done button-green\",on:{\"click\":function($event){_vm.finish()}}},[_vm._v(\"Done\")])])]):(_vm.finished)?_c('div',[_c('p',{staticClass:\"finished\"},[(this.fullText.trim())?[_c('strong',[_vm._v(\"Saved!\")]),_vm._v(\" You can view this exercise in the Workshops column of the Write page.\\n        \")]:[_c('strong',[_vm._v(\"Deleted!\")]),_vm._v(\" This exercise was empty.\\n        \")]],2),_vm._v(\" \"),_c('button',{staticClass:\"button-green\",on:{\"click\":function($event){_vm.reset()}}},[_vm._v(\"Start over\")])]):_vm._e()])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('strong',[_vm._v(\"Prompt:\")])])}]\nexport { render, staticRenderFns }"],"sourceRoot":""}