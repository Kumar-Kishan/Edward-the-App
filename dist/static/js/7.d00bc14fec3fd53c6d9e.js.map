{"version":3,"sources":["webpack:///./src/app/exporter/pdf.js","webpack:///src/app/exporter/exporter.page.vue","webpack:///./src/app/exporter/exporter.page.vue","webpack:///./src/app/exporter/json.js","webpack:///./src/app/exporter/exporter.page.vue?c012"],"names":["__webpack_require__","_utilities","_pdfmake2","default","vfs","_vfs_fonts2","pdfMake","chaptersToPdf","title","chapters","_promise2","resolve","_definition$content","definition","content","text","style","styles","body","fontSize","bold","blockquote","margin","chapterHeading","h1","h2","h3","italic","italics","strike","decoration","underline","splitContent","getStyledArrayFromChapters","counter","forEach","includes","ul","ol","start","concat","apply","_toConsumableArray3","createPdf","getBlob","blob","window","_integration","_pdfSuccess","_fileSaver2","saveAs","_json","_cache","_pdf","_document","_storageSwitch","PulseLoader","_PulseLoader2","plans","workshops","guid","name","isPremium","topics","_this","this","backup","_backup","documentGuid","documentTitle","resetCache","then","dispatch","CHANGE_DOCUMENT","err","_this2","_this3","chapter","archived","pdfIncludeArchived","_this4","topic","nestedTopics","_this5","plan","section","nestedPlans","_this6","workshop","date","order","toString","workshopName","_this7","wordIncludeArchived","_this8","willOverwrite","_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__","__vue_styles__","context","Component","Object","_babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_exporter_page_vue__WEBPACK_IMPORTED_MODULE_0___default","a","_node_modules_vue_loader_lib_template_compiler_index_id_data_v_30c0f930_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_exporter_page_vue__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","backupToJsonFile","json","_stringify2","Blob","type","today","Date","getDate","getMonth","getFullYear","jsonFileToBackup","file","reject","reader","FileReader","onload","result","JSON","parse","e","readAsText","d","staticRenderFns","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_e","loading","directives","rawName","value","expression","attrs","id","domProps","checked","Array","isArray","_i","on","change","$event","$$a","$$el","target","$$c","$$i","slice","for","click","exportPdfChapters","exportPdfPlans","exportPdfOutlines","exportPdfWorkshops","exportWordChapters","exportJsonDocument","accept","setFile"],"mappings":"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","file":"static/js/7.d00bc14fec3fd53c6d9e.js","sourcesContent":["import pdfMake from 'pdfmake/build/pdfmake'\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts.js'\r\nimport FileSaver from 'file-saver'\r\nimport { getStyledArrayFromChapters } from '../../../utilities'\r\n\r\npdfMake.vfs = pdfFonts.pdfMake.vfs\r\n\r\nexport const chaptersToPdf = (title, chapters) => {\r\n  return new Promise((resolve) => {\r\n    const definition = {\r\n      content: [{\r\n        text: title,\r\n        style: 'title'\r\n      }],\r\n      styles: {\r\n        body: {\r\n          fontSize: 12\r\n        },\r\n        bold: {\r\n          bold: true\r\n        },\r\n        blockquote: {\r\n          margin: [10, 10, 0, 10]\r\n        },\r\n        chapterHeading: {\r\n          fontSize: 20,\r\n          margin: [5, 10]\r\n        },\r\n        h1: {\r\n          fontSize: 18\r\n        },\r\n        h2: {\r\n          fontSize: 16\r\n        },\r\n        h3: {\r\n          fontSize: 14\r\n        },\r\n        italic: {\r\n          italics: true\r\n        },\r\n        strike: {\r\n          decoration: 'lineThrough'\r\n        },\r\n        title: {\r\n          fontSize: 40\r\n        },\r\n        underline: {\r\n          decoration: 'underline'\r\n        }\r\n      }\r\n    }\r\n\r\n    const splitContent = getStyledArrayFromChapters(chapters)\r\n\r\n    let counter = 1\r\n    splitContent.forEach(content => {\r\n      if (content.style.includes('ul')) {\r\n        content.ul = [{ text: content.text }]\r\n        counter = 1\r\n        content.text = null\r\n      } else if (content.style.includes('ol')) {\r\n        content.ol = [{ text: content.text }]\r\n        content.start = counter++\r\n        content.text = null\r\n      } else {\r\n        counter = 1\r\n      }\r\n      return content\r\n    })\r\n\r\n    definition.content = definition.content.concat(...splitContent)\r\n\r\n    pdfMake.createPdf(definition).getBlob(blob => {\r\n      if (window && window._integration) {\r\n        window._pdfSuccess = true\r\n        return resolve()\r\n      }\r\n      FileSaver.saveAs(blob, `${title}.pdf`)\r\n      resolve()\r\n    })\r\n  })\r\n}\r\n","<template>\r\n  <div class=\"wrap\">\r\n    <div class=\"exporter\">\r\n      <div class=\"export-option\">\r\n        <h3>Export to PDF</h3>\r\n        <pulse-loader v-if=\"loading\"></pulse-loader>\r\n        <div class=\"export-checkbox\">\r\n          <input id=\"pdfIncludeArchived\" v-if=\"!loading\" type=\"checkbox\" v-model=\"pdfIncludeArchived\">\r\n          <label for=\"pdfIncludeArchived\" v-if=\"!loading\">Include Archived</label>\r\n        </div>\r\n        <template v-if=\"!loading\">\r\n          <button class=\"button-green export-button\" @click=\"exportPdfChapters()\">\r\n            Export all chapters\r\n          </button>\r\n          <button class=\"button-green export-button\" @click=\"exportPdfPlans()\">\r\n            Export all plans\r\n          </button>\r\n          <button class=\"button-green export-button\" @click=\"exportPdfOutlines()\">\r\n            Export all outlines\r\n          </button>\r\n          <button v-if=\"isPremium\" class=\"button-green export-button\" @click=\"exportPdfWorkshops()\">\r\n            Export all workshops\r\n          </button>\r\n        </template>\r\n      </div>\r\n      <div class=\"export-option\">\r\n        <h3>Export to Microsoft Word document</h3>\r\n        <div>(Premium users only)</div>\r\n        <pulse-loader v-if=\"loading\"></pulse-loader>\r\n        <div class=\"export-checkbox\">\r\n          <input id=\"wordIncludeArchived\" v-if=\"!loading\" type=\"checkbox\" v-model=\"wordIncludeArchived\">\r\n          <label for=\"wordIncludeArchived\" v-if=\"!loading\">Include Archived</label>\r\n        </div>\r\n        <template v-if=\"!loading\">\r\n          <button class=\"button-green export-button\" @click=\"exportWordChapters()\">\r\n            Export all chapters\r\n          </button>\r\n        </template>\r\n      </div>\r\n      <div class=\"export-option\">\r\n        <h3>Create a backup</h3>\r\n        <div>(You can recover your document from this file later.)</div>\r\n        <pulse-loader v-if=\"loading\"></pulse-loader>\r\n        <button v-if=\"!loading\" class=\"button-green export-button\" @click=\"exportJsonDocument()\">\r\n          Export entire document\r\n        </button>\r\n      </div>\r\n      <div class=\"export-option\">\r\n        <h3>Import a backup</h3>\r\n        <div>\r\n          (Warning: This will overwrite the current document completely, including all chapters, plans, outlines and workshops.)\r\n        </div>\r\n        <div class=\"file-input-container\">\r\n          <pulse-loader v-if=\"loading\"></pulse-loader>\r\n          <template v-if=\"!loading\">\r\n            <label for=\"import-file-picker\" class=\"file-input-label\"></label>\r\n            <input id=\"import-file-picker\" class=\"file-input\" type=\"file\" accept=\".json\" @change=\"setFile\">\r\n            <button class=\"button-green export-button file-dummy-button\">\r\n              Import entire document\r\n            </button>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { backupToJsonFile, jsonFileToBackup } from './json'\r\nimport { resetCache } from '../shared/cache'\r\nimport { chaptersToPdf } from './pdf'\r\nimport { CHANGE_DOCUMENT } from '../shared/document.store'\r\nimport PulseLoader from 'vue-spinner/src/PulseLoader.vue'\r\nimport sortBy from 'lodash/sortBy'\r\nimport { storageApiPromise } from '../api/storageSwitch'\r\nimport swal from 'sweetalert'\r\nimport writingWorkshops from '../../../models/writingWorkshop'\r\n\r\nexport default {\r\n  components: {\r\n    PulseLoader\r\n  },\r\n  computed: {\r\n    allChapters () {\r\n      return this.$store.state.chapters.chapters\r\n    },\r\n    allPlans () {\r\n      return this.$store.state.chapters.plans\r\n    },\r\n    allWorkshops () {\r\n      return this.$store.state.workshop.workshops\r\n    },\r\n    documentGuid () {\r\n      return this.$store.state.document.currentDocument.guid\r\n    },\r\n    documentTitle () {\r\n      return this.$store.state.document.currentDocument.name\r\n    },\r\n    isPremium () {\r\n      return this.$store.state.user.user.isPremium\r\n    },\r\n    masterTopics () {\r\n      return this.$store.state.chapters.topics\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      pdfIncludeArchived: false,\r\n      loading: false,\r\n      wordIncludeArchived: false\r\n    }\r\n  },\r\n  methods: {\r\n    importBackup (file) {\r\n      this.loading = true\r\n      let backup\r\n      jsonFileToBackup(file).then(_backup => {\r\n        backup = _backup\r\n        backup.guid = this.documentGuid\r\n        backup.name = this.documentTitle\r\n\r\n        return storageApiPromise.then(storage => {\r\n          return storage.docImport(backup)\r\n        })\r\n      }).then(backup => {\r\n        this.loading = false\r\n        resetCache()\r\n\r\n        swal({\r\n          icon: 'success',\r\n          text: 'The document has been imported.',\r\n          title: 'Success'\r\n        }).then(() => {\r\n          return this.$store.dispatch(CHANGE_DOCUMENT,\r\n            { guid: this.documentGuid, name: this.documentTitle }\r\n          )\r\n        })\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not import the document. DETAILS: \"${err}\"`,\r\n          title: 'Failure'\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    exportJsonDocument () {\r\n      this.loading = true\r\n\r\n      storageApiPromise.then(storage => {\r\n        return storage.docExport(this.documentGuid, this.documentTitle)\r\n      }).then(backup => {\r\n        backupToJsonFile(this.documentTitle, backup).then(() => {\r\n          this.loading = false\r\n        }, err => {\r\n          this.loading = false\r\n          swal({\r\n            icon: 'error',\r\n            text: `Could not export the document. DETAILS: \"${err}\"`\r\n          })\r\n          throw err\r\n        })\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not export the document. DETAILS: \"${err}\"`\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    exportPdfChapters () {\r\n      this.loading = true\r\n\r\n      const chaptersToExport = this.allChapters.filter(chapter =>\r\n        !chapter.archived || this.pdfIncludeArchived\r\n      )\r\n\r\n      chaptersToPdf(this.documentTitle, chaptersToExport).then(() => {\r\n        this.loading = false\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not export the document. DETAILS: \"${err}\"`\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    exportPdfOutlines () {\r\n      this.loading = true\r\n\r\n      const nestedTopics = this.allChapters.filter(chapter =>\r\n        !chapter.archived || this.pdfIncludeArchived\r\n      ).map(chapter => {\r\n        const chapterTopics = Object.keys(chapter.topics).map(guid => {\r\n          const topic = chapter.topics[guid]\r\n          const masterTopic = this.getMasterTopic(topic)\r\n          topic.archived = masterTopic.archived\r\n          topic.title = `${chapter.title} - ${masterTopic.title}`\r\n          return topic\r\n        }).filter(topic =>\r\n          !topic.archived || this.pdfIncludeArchived\r\n        )\r\n\r\n        return chapterTopics\r\n      })\r\n\r\n      const topicsArray = [].concat(...nestedTopics)\r\n\r\n      chaptersToPdf(`${this.documentTitle}: Outlines`, topicsArray).then(() => {\r\n        this.loading = false\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not export outlines. DETAILS: \"${err}\"`\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    exportPdfPlans () {\r\n      this.loading = true\r\n      const nestedPlans = this.allPlans.filter(plan =>\r\n        !plan.archived || this.pdfIncludeArchived\r\n      ).map(plan => {\r\n        return plan.sections.filter(section =>\r\n          !section.archived || this.pdfIncludeArchived\r\n        ).map(section => {\r\n          const title = plan.title === section.title\r\n            ? plan.title\r\n            : `${plan.title} - ${section.title}`\r\n\r\n          return {\r\n            title,\r\n            content: section.content\r\n          }\r\n        })\r\n      })\r\n\r\n      const planArray = [].concat(...nestedPlans)\r\n\r\n      chaptersToPdf(`${this.documentTitle}: Plans`, planArray).then(() => {\r\n        this.loading = false\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not export plans. DETAILS: \"${err}\"`\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    exportPdfWorkshops () {\r\n      this.loading = true\r\n      const workshops = this.allWorkshops.filter(workshop =>\r\n        !workshop.archived || this.pdfIncludeArchived\r\n      ).map(workshop => {\r\n        return {\r\n          content: workshop.content,\r\n          date: workshop.date,\r\n          guid: workshop.guid,\r\n          order: workshop.order,\r\n          title: `${writingWorkshops[workshop.workshopName].displayName} (${workshop.date.toString()})`,\r\n          workshopName: workshop.workshopName\r\n        }\r\n      })\r\n\r\n      const sortedWorkshops = sortBy(workshops, workshop =>\r\n        `${workshop.workshopName}-${workshop.date.toString()}-${workshop.guid}-${workshop.order}`\r\n      )\r\n\r\n      chaptersToPdf(`${this.documentTitle}: Workshops`, sortedWorkshops).then(() => {\r\n        this.loading = false\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not export workshops. DETAILS: \"${err}\"`\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    exportWordChapters () {\r\n      if (!this.isPremium) {\r\n        swal({\r\n          button: 'OK',\r\n          dangerMode: true,\r\n          icon: 'error',\r\n          text: `Only Premium users can export to a Microsoft Word document. Please upgrade to a Premium subscription to continue.`,\r\n          title: 'Not allowed'\r\n        })\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      storageApiPromise.then(storage => {\r\n        return storage.exportToWord({\r\n          guid: this.documentGuid,\r\n          title: this.documentTitle,\r\n          includeArchived: this.wordIncludeArchived\r\n        })\r\n      }).then(() => {\r\n        this.loading = false\r\n      }, err => {\r\n        this.loading = false\r\n        swal({\r\n          icon: 'error',\r\n          text: `Could not export to Word. DETAILS: \"${err}\"`\r\n        })\r\n        throw err\r\n      })\r\n    },\r\n    getMasterTopic (chapterTopic) {\r\n      return this.masterTopics.find(topic => topic.guid === chapterTopic.guid)\r\n    },\r\n    setFile (event) {\r\n      swal({\r\n        buttons: true,\r\n        dangerMode: true,\r\n        icon: 'warning',\r\n        text: `Are you sure you want to import this file? It will overwrite everything in the current document.`,\r\n        title: 'Overwrite current document?'\r\n      }).then(willOverwrite => {\r\n        if (!willOverwrite) {\r\n          return\r\n        }\r\n\r\n        this.importBackup(event.target.files[0])\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wrap {\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.exporter {\r\n  display: block;\r\n  flex: 1;\r\n  max-width: 1050px;\r\n}\r\n\r\n.export-option {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.export-checkbox {\r\n  margin-top: 8px;\r\n}\r\n\r\n.export-button {\r\n  margin: 10px 0;\r\n}\r\n\r\n.file-input-container {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  position: relative;\r\n}\r\n\r\n.file-input-label {\r\n  bottom: 0;\r\n  cursor: pointer;\r\n  left: 0;\r\n  opacity: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n.file-input {\r\n  border: none;\r\n  position: absolute;\r\n  visibility: hidden;\r\n}\r\n\r\n.file-dummy-button {\r\n  pointer-events: none;\r\n}\r\n</style>\r\n","function injectStyle (context) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-30c0f930\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./exporter.page.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./exporter.page.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./exporter.page.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-30c0f930\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./exporter.page.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-30c0f930\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","import FileSaver from 'file-saver'\r\n\r\nexport const backupToJsonFile = (title, backup) => {\r\n  return new Promise((resolve) => {\r\n    const json = JSON.stringify(backup)\r\n    const blob = new Blob([json], { type: 'application/json' })\r\n    const today = new Date()\r\n    const date = `${today.getDate()}.${today.getMonth() + 1}.${today.getFullYear()}`\r\n\r\n    if (window && window._integration) {\r\n      window._pdfSuccess = true\r\n      return resolve()\r\n    }\r\n\r\n    FileSaver.saveAs(blob, `${title}--${date}.json`)\r\n    resolve()\r\n  })\r\n}\r\n\r\nexport const jsonFileToBackup = file => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = () => {\r\n      try {\r\n        const json = reader.result\r\n        resolve(JSON.parse(json))\r\n      } catch (e) {\r\n        reject(e)\r\n      }\r\n    }\r\n    reader.readAsText(file)\r\n  })\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[_c('div',{staticClass:\"exporter\"},[_c('div',{staticClass:\"export-option\"},[_c('h3',[_vm._v(\"Export to PDF\")]),_vm._v(\" \"),(_vm.loading)?_c('pulse-loader'):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"export-checkbox\"},[(!_vm.loading)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.pdfIncludeArchived),expression:\"pdfIncludeArchived\"}],attrs:{\"id\":\"pdfIncludeArchived\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.pdfIncludeArchived)?_vm._i(_vm.pdfIncludeArchived,null)>-1:(_vm.pdfIncludeArchived)},on:{\"change\":function($event){var $$a=_vm.pdfIncludeArchived,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.pdfIncludeArchived=$$a.concat([$$v]))}else{$$i>-1&&(_vm.pdfIncludeArchived=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.pdfIncludeArchived=$$c}}}}):_vm._e(),_vm._v(\" \"),(!_vm.loading)?_c('label',{attrs:{\"for\":\"pdfIncludeArchived\"}},[_vm._v(\"Include Archived\")]):_vm._e()]),_vm._v(\" \"),(!_vm.loading)?[_c('button',{staticClass:\"button-green export-button\",on:{\"click\":function($event){_vm.exportPdfChapters()}}},[_vm._v(\"\\n          Export all chapters\\n        \")]),_vm._v(\" \"),_c('button',{staticClass:\"button-green export-button\",on:{\"click\":function($event){_vm.exportPdfPlans()}}},[_vm._v(\"\\n          Export all plans\\n        \")]),_vm._v(\" \"),_c('button',{staticClass:\"button-green export-button\",on:{\"click\":function($event){_vm.exportPdfOutlines()}}},[_vm._v(\"\\n          Export all outlines\\n        \")]),_vm._v(\" \"),(_vm.isPremium)?_c('button',{staticClass:\"button-green export-button\",on:{\"click\":function($event){_vm.exportPdfWorkshops()}}},[_vm._v(\"\\n          Export all workshops\\n        \")]):_vm._e()]:_vm._e()],2),_vm._v(\" \"),_c('div',{staticClass:\"export-option\"},[_c('h3',[_vm._v(\"Export to Microsoft Word document\")]),_vm._v(\" \"),_c('div',[_vm._v(\"(Premium users only)\")]),_vm._v(\" \"),(_vm.loading)?_c('pulse-loader'):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"export-checkbox\"},[(!_vm.loading)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.wordIncludeArchived),expression:\"wordIncludeArchived\"}],attrs:{\"id\":\"wordIncludeArchived\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.wordIncludeArchived)?_vm._i(_vm.wordIncludeArchived,null)>-1:(_vm.wordIncludeArchived)},on:{\"change\":function($event){var $$a=_vm.wordIncludeArchived,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.wordIncludeArchived=$$a.concat([$$v]))}else{$$i>-1&&(_vm.wordIncludeArchived=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.wordIncludeArchived=$$c}}}}):_vm._e(),_vm._v(\" \"),(!_vm.loading)?_c('label',{attrs:{\"for\":\"wordIncludeArchived\"}},[_vm._v(\"Include Archived\")]):_vm._e()]),_vm._v(\" \"),(!_vm.loading)?[_c('button',{staticClass:\"button-green export-button\",on:{\"click\":function($event){_vm.exportWordChapters()}}},[_vm._v(\"\\n          Export all chapters\\n        \")])]:_vm._e()],2),_vm._v(\" \"),_c('div',{staticClass:\"export-option\"},[_c('h3',[_vm._v(\"Create a backup\")]),_vm._v(\" \"),_c('div',[_vm._v(\"(You can recover your document from this file later.)\")]),_vm._v(\" \"),(_vm.loading)?_c('pulse-loader'):_vm._e(),_vm._v(\" \"),(!_vm.loading)?_c('button',{staticClass:\"button-green export-button\",on:{\"click\":function($event){_vm.exportJsonDocument()}}},[_vm._v(\"\\n        Export entire document\\n      \")]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"export-option\"},[_c('h3',[_vm._v(\"Import a backup\")]),_vm._v(\" \"),_c('div',[_vm._v(\"\\n        (Warning: This will overwrite the current document completely, including all chapters, plans, outlines and workshops.)\\n      \")]),_vm._v(\" \"),_c('div',{staticClass:\"file-input-container\"},[(_vm.loading)?_c('pulse-loader'):_vm._e(),_vm._v(\" \"),(!_vm.loading)?[_c('label',{staticClass:\"file-input-label\",attrs:{\"for\":\"import-file-picker\"}}),_vm._v(\" \"),_c('input',{staticClass:\"file-input\",attrs:{\"id\":\"import-file-picker\",\"type\":\"file\",\"accept\":\".json\"},on:{\"change\":_vm.setFile}}),_vm._v(\" \"),_c('button',{staticClass:\"button-green export-button file-dummy-button\"},[_vm._v(\"\\n            Import entire document\\n          \")])]:_vm._e()],2)])])])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }"],"sourceRoot":""}