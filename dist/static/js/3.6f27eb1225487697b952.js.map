{"version":3,"sources":["webpack:///./src/app/workshops/novelQuickstart.page.vue","webpack:///./src/app/workshops/novelQuickstart.page.vue?0f5c","webpack:///src/app/workshops/novelQuickstart.page.vue"],"names":["_node_modules_vue_loader_lib_runtime_component_normalizer__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","__vue_styles__","context","Component","Object","_babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_novelQuickstart_page_vue__WEBPACK_IMPORTED_MODULE_0___default","a","_node_modules_vue_loader_lib_template_compiler_index_id_data_v_28413b43_hasScoped_true_optionsId_0_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_novelQuickstart_page_vue__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","d","staticRenderFns","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","finished","_e","attrs","name","mode","key","fullText","trim","to","on","click","$event","reset","content","title","update:content","updateContent","tagline","summary","theme","jacket","report","finish","_workshops","_deltaParser","exerciseCache","_cache2","default","QuillEditor","_quillEditor2","Timer","_timer2","workshops","currentWorkshops","newWorkshop","cacheDelete","cacheGet","cachedGuid","_this","_guid2","toLocaleDateString","uuid","order","workshop","begin","index","getCurrentWorkshop","_this2"],"mappings":"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","file":"static/js/3.6f27eb1225487697b952.js","sourcesContent":["function injectStyle (context) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"optionsId\\\":\\\"0\\\",\\\"vue\\\":true,\\\"id\\\":\\\"data-v-28413b43\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./novelQuickstart.page.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./novelQuickstart.page.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./novelQuickstart.page.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-28413b43\\\",\\\"hasScoped\\\":true,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./novelQuickstart.page.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-28413b43\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"workshops-wrap\"},[_c('div',{staticClass:\"write\"},[_c('div',{staticClass:\"intro\"},[_c('h1',[_vm._v(\"Novel Quickstart\")]),_vm._v(\" \"),(!_vm.finished)?_c('p',[_c('strong',[_vm._v(\"Answer the following prompts.\")]),_vm._v(\" You'll start simple and add more details as you go along.\\n        By the end, you'll be ready to start plotting and outlining your novel.\\n      \")]):_vm._e()]),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(!_vm.finished)?_c('div',{key:\"content\",staticClass:\"content\"},[_c('p',{staticClass:\"description\"},[_vm._v(\"Write the title of your novel:\")]),_vm._v(\" \"),_c('div',{staticClass:\"editor short title\"},[_c('quill-editor',{attrs:{\"content\":_vm.content.title},on:{\"update:content\":function($event){_vm.updateContent(0, $event)}}})],1),_vm._v(\" \"),_c('p',{staticClass:\"description\"},[_vm._v(\"Write a tagline: a short, catchy slogan that draws potential readers in.\")]),_vm._v(\" \"),_c('p',{staticClass:\"example\"},[_vm._v(\"e.g. \\\"Can the best thing happen at the worst time?\\\"\")]),_vm._v(\" \"),_c('div',{staticClass:\"editor short tagline\"},[_c('quill-editor',{attrs:{\"content\":_vm.content.tagline},on:{\"update:content\":function($event){_vm.updateContent(1, $event)}}})],1),_vm._v(\" \"),_c('p',{staticClass:\"description\"},[_vm._v(\"\\n          Summarize your novel in one or two sentences, like the descriptions in the New York Times bestseller list.\\n        \")]),_vm._v(\" \"),_c('p',{staticClass:\"example\"},[_vm._v(\"\\n          e.g. \\\"In the year 2149, a young family struggles to survive in an irradiated countryside.\\\"\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"editor short summary\"},[_c('quill-editor',{attrs:{\"content\":_vm.content.summary},on:{\"update:content\":function($event){_vm.updateContent(2, $event)}}})],1),_vm._v(\" \"),_c('p',{staticClass:\"description\"},[_vm._v(\"In a sentence or two, explain the theme of the novel and why it's important to you.\")]),_vm._v(\" \"),_c('p',{staticClass:\"example\"},[_vm._v(\"\\n          e.g. \\\"This novel is about learning to trust the people who are always there for you.\\n          I want the reader to know that it's okay to believe in others, even if they've been hurt before.\\\"\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"editor short theme\"},[_c('quill-editor',{attrs:{\"content\":_vm.content.theme},on:{\"update:content\":function($event){_vm.updateContent(3, $event)}}})],1),_vm._v(\" \"),_c('p',{staticClass:\"description\"},[_vm._v(\"\\n          Write the \\\"back jacket\\\" of the novel: a few paragraphs that introduce the plot and characters.\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"editor medium jacket\"},[_c('quill-editor',{attrs:{\"content\":_vm.content.jacket},on:{\"update:content\":function($event){_vm.updateContent(4, $event)}}})],1),_vm._v(\" \"),_c('p',{staticClass:\"description\"},[_vm._v(\"\\n          Write a book report about your novel: several paragraphs that describe the most important parts.\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"editor long report\"},[_c('quill-editor',{attrs:{\"content\":_vm.content.report},on:{\"update:content\":function($event){_vm.updateContent(5, $event)}}})],1),_vm._v(\" \"),_c('button',{staticClass:\"button-green done\",on:{\"click\":function($event){_vm.finish()}}},[_vm._v(\"Finish\")])]):_c('div',{key:\"finished\",staticClass:\"finished\"},[(this.fullText.trim())?_c('div',[_c('p',[_vm._v(\"\\n            Saved! You can view what you've written in the Workshops column of the Write page.\\n          \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n            If you're ready to start writing, you can visit the \"),_c('router-link',{attrs:{\"to\":\"/write\"}},[_vm._v(\"Write\")]),_vm._v(\" page.\\n            You can also visit the \"),_c('router-link',{attrs:{\"to\":\"/plan\"}},[_vm._v(\"Plan\")]),_vm._v(\" page to do more plotting and development,\\n            or the \"),_c('router-link',{attrs:{\"to\":\"/outline\"}},[_vm._v(\"Outline\")]),_vm._v(\" page to start outlining individual chapters.\\n          \")],1)]):_c('div',[_c('p',[_vm._v(\"\\n            Deleted! This workshop was empty.\\n          \")])]),_vm._v(\" \"),_c('button',{staticClass:\"button-green\",on:{\"click\":function($event){_vm.reset()}}},[_vm._v(\"Start over\")])])])],1)])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"workshops-wrap\">\r\n    <div class=\"write\">\r\n      <div class=\"intro\">\r\n        <h1>Novel Quickstart</h1>\r\n        <p v-if=\"!finished\">\r\n          <strong>Answer the following prompts.</strong> You'll start simple and add more details as you go along.\r\n          By the end, you'll be ready to start plotting and outlining your novel.\r\n        </p>\r\n      </div>\r\n      <transition name=\"fade\" mode=\"out-in\">\r\n        <div v-if=\"!finished\" class=\"content\" key=\"content\">\r\n          <!-- Title -->\r\n          <p class=\"description\">Write the title of your novel:</p>\r\n          <div class=\"editor short title\">\r\n            <quill-editor :content=\"content.title\" @update:content=\"updateContent(0, $event)\"></quill-editor>\r\n          </div>\r\n          <!-- Tagline -->\r\n          <p class=\"description\">Write a tagline: a short, catchy slogan that draws potential readers in.</p>\r\n          <p class=\"example\">e.g. \"Can the best thing happen at the worst time?\"</p>\r\n          <div class=\"editor short tagline\">\r\n            <quill-editor :content=\"content.tagline\" @update:content=\"updateContent(1, $event)\"></quill-editor>\r\n          </div>\r\n          <!-- Two-sentence summary (NYT bestseller snippet) -->\r\n          <p class=\"description\">\r\n            Summarize your novel in one or two sentences, like the descriptions in the New York Times bestseller list.\r\n          </p>\r\n          <p class=\"example\">\r\n            e.g. \"In the year 2149, a young family struggles to survive in an irradiated countryside.\"\r\n          </p>\r\n          <div class=\"editor short summary\">\r\n            <quill-editor :content=\"content.summary\" @update:content=\"updateContent(2, $event)\"></quill-editor>\r\n          </div>\r\n          <!-- Theme -->\r\n          <p class=\"description\">In a sentence or two, explain the theme of the novel and why it's important to you.</p>\r\n          <p class=\"example\">\r\n            e.g. \"This novel is about learning to trust the people who are always there for you.\r\n            I want the reader to know that it's okay to believe in others, even if they've been hurt before.\"\r\n          </p>\r\n          <div class=\"editor short theme\">\r\n            <quill-editor :content=\"content.theme\" @update:content=\"updateContent(3, $event)\"></quill-editor>\r\n          </div>\r\n          <!-- Back jacket (a few paragraphs) -->\r\n          <p class=\"description\">\r\n            Write the \"back jacket\" of the novel: a few paragraphs that introduce the plot and characters.\r\n          </p>\r\n          <div class=\"editor medium jacket\">\r\n            <quill-editor :content=\"content.jacket\" @update:content=\"updateContent(4, $event)\"></quill-editor>\r\n          </div>\r\n          <!-- Book report (a page or two) -->\r\n          <p class=\"description\">\r\n            Write a book report about your novel: several paragraphs that describe the most important parts.\r\n          </p>\r\n          <div class=\"editor long report\">\r\n            <quill-editor :content=\"content.report\" @update:content=\"updateContent(5, $event)\"></quill-editor>\r\n          </div>\r\n          <button class=\"button-green done\" @click=\"finish()\">Finish</button>\r\n        </div>\r\n        <div v-else class=\"finished\" key=\"finished\">\r\n          <div v-if=\"this.fullText.trim()\">\r\n            <p>\r\n              Saved! You can view what you've written in the Workshops column of the Write page.\r\n            </p>\r\n            <p>\r\n              If you're ready to start writing, you can visit the <router-link to=\"/write\">Write</router-link> page.\r\n              You can also visit the <router-link to=\"/plan\">Plan</router-link> page to do more plotting and development,\r\n              or the <router-link to=\"/outline\">Outline</router-link> page to start outlining individual chapters.\r\n            </p>\r\n          </div>\r\n          <div v-else>\r\n            <p>\r\n              Deleted! This workshop was empty.\r\n            </p>\r\n          </div>\r\n          <button class=\"button-green\" @click=\"reset()\">Start over</button>\r\n        </div>\r\n      </transition>      \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ADD_WORKSHOP, DELETE_WORKSHOP, UPDATE_WORKSHOPS_CONTENT } from '../shared/workshops.store'\r\nimport Cache from '../shared/cache'\r\nimport { GetContentString } from '../shared/deltaParser'\r\nimport guid from '../shared/guid'\r\nimport QuillEditor from '../shared/quillEditor.vue'\r\nimport Timer from '../shared/timer.vue'\r\nimport writingWorkshops from '../../../models/writingWorkshop'\r\n\r\nconst exerciseCache = new Cache('NOVEL_QUICKSTART_CURRENT_EXERCISE')\r\n\r\nexport default {\r\n  components: {\r\n    QuillEditor,\r\n    Timer\r\n  },\r\n  computed: {\r\n    allWorkshops () {\r\n      return this.$store.state.workshop.workshops\r\n    },\r\n    content () {\r\n      if (!this.workshops) {\r\n        return {}\r\n      }\r\n\r\n      return {\r\n        title: this.workshops[0].content,\r\n        tagline: this.workshops[1].content,\r\n        summary: this.workshops[2].content,\r\n        theme: this.workshops[3].content,\r\n        jacket: this.workshops[4].content,\r\n        report: this.workshops[5].content\r\n      }\r\n    },\r\n    fullText () {\r\n      if (!this.workshops || !this.workshops.length) {\r\n        return ''\r\n      }\r\n\r\n      return this.workshops.reduce((acc, el) => acc + GetContentString(el.content), '')\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      finished: false,\r\n      workshops: null\r\n    }\r\n  },\r\n  methods: {\r\n    begin (currentWorkshops) {\r\n      if (!currentWorkshops) {\r\n        this.newWorkshop()\r\n      } else {\r\n        this.workshops = currentWorkshops\r\n      }\r\n    },\r\n    finish () {\r\n      exerciseCache.cacheDelete()\r\n      this.finished = true\r\n    },\r\n    getCurrentWorkshop () {\r\n      const cachedGuid = exerciseCache.cacheGet()\r\n      if (!cachedGuid) {\r\n        return null\r\n      }\r\n\r\n      const workshops = this.allWorkshops.filter(workshop => workshop.guid === cachedGuid)\r\n      return workshops && workshops.length ? workshops : null\r\n    },\r\n    newWorkshop () {\r\n      exerciseCache.cacheDelete()\r\n      const uuid = guid()\r\n      const title = `Novel Quickstart ${new Date().toLocaleDateString()}`\r\n      this.workshops = [0, 1, 2, 3, 4, 5].map(order => ({\r\n        archived: false,\r\n        guid: uuid,\r\n        title,\r\n        order,\r\n        workshopName: writingWorkshops.NOVEL_QUICKSTART.name,\r\n        content: null,\r\n        date: new Date().toLocaleDateString('en-US')\r\n      }))\r\n\r\n      this.workshops.forEach(workshop => this.$store.commit(ADD_WORKSHOP, { workshop }))\r\n      exerciseCache.cacheSet(uuid)\r\n    },\r\n    reset () {\r\n      this.finished = false\r\n      this.workshops = null\r\n      this.begin()\r\n    },\r\n    updateContent (index, content) {\r\n      this.$store.commit(UPDATE_WORKSHOPS_CONTENT, {\r\n        workshopUpdates: [{\r\n          workshop: this.workshops[index],\r\n          newContent: content\r\n        }]\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    const workshops = this.getCurrentWorkshop()\r\n    this.begin(workshops || null)\r\n  },\r\n  beforeDestroy () {\r\n    if (!this.fullText.trim()) {\r\n      exerciseCache.cacheDelete()\r\n      if (this.workshops) {\r\n        this.workshops.forEach(workshop => this.$store.commit(DELETE_WORKSHOP, { workshop }))\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 500ms;\r\n}\r\n\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.fade-leave, .fade-enter-to {\r\n  opacity: 1;\r\n}\r\n\r\n.workshops-wrap {\r\n  display: flex;\r\n  font-size: 16px;\r\n  justify-content: center;\r\n  width: 100%;\r\n}\r\n\r\n.workshops-wrap a {\r\n  font-size: 16px;\r\n}\r\n\r\n.write {\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  max-width: 100%;\r\n  width: 1050px;\r\n}\r\n\r\n.intro {\r\n  margin: 0;\r\n  margin-bottom: 20px;\r\n  max-width: 100%;\r\n  width: 600px;\r\n}\r\n\r\n.content {\r\n  margin-bottom: 30px;\r\n  max-width: 100%;;\r\n  position: relative;\r\n  width: 600px;\r\n}\r\n\r\n.description {\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.example {\r\n  color: #444;\r\n  font-size: 14px;\r\n  font-style: italic;\r\n}\r\n\r\n.editor {\r\n  display: block;\r\n  margin-bottom: 75px;\r\n  transition: opacity 200ms;\r\n}\r\n\r\n.editor.short {\r\n  height: 80px;\r\n}\r\n\r\n.editor.medium {\r\n  height: 180px;\r\n}\r\n\r\n.editor.long {\r\n  height: 280px;\r\n}\r\n\r\n.editor.saving {\r\n  opacity: 0.5;\r\n}\r\n\r\n.editor .wrap {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.finished {\r\n  margin-top: 20px;\r\n  max-width: 100%;\r\n  width: 600px;\r\n}\r\n</style>\r\n"],"sourceRoot":""}